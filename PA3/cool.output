Nonterminals useless in grammar

    arithmetic_expression


Terminals unused in grammar

    ELSE
    FI
    IF
    IN
    LET
    LOOP
    POOL
    THEN
    WHILE
    CASE
    ESAC
    OF
    DARROW
    NEW
    ISVOID
    STR_CONST
    INT_CONST
    BOOL_CONST
    NOT
    LE
    ERROR
    '+'
    '-'
    '*'
    '/'


Rules useless in grammar

   11 arithmetic_expression: INT_CONST
   12                      | OBJECTID
   13                      | arithmetic_expression '+' arithmetic_expression
   14                      | arithmetic_expression '-' arithmetic_expression
   15                      | arithmetic_expression '*' arithmetic_expression
   16                      | arithmetic_expression '/' arithmetic_expression


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    6 feature_list: feature
    7             | feature_list feature

    8 feature: attribute

    9 attribute: OBJECTID ':' TYPEID ';'
   10          | OBJECTID ':' TYPEID ASSIGN ';'


Terminals, with rules where they appear

    $end (0) 0
    '*' (42)
    '+' (43)
    '-' (45)
    '/' (47)
    ':' (58) 9 10
    ';' (59) 4 5 9 10
    '{' (123) 4 5
    '}' (125) 4 5
    error (256)
    CLASS (258) 4 5
    ELSE (259)
    FI (260)
    IF (261)
    IN (262)
    INHERITS (263) 5
    LET (264)
    LOOP (265)
    POOL (266)
    THEN (267)
    WHILE (268)
    CASE (269)
    ESAC (270)
    OF (271)
    DARROW (272)
    NEW (273)
    ISVOID (274)
    STR_CONST <symbol> (275)
    INT_CONST <symbol> (276)
    BOOL_CONST <boolean> (277)
    TYPEID <symbol> (278) 4 5 9 10
    OBJECTID <symbol> (279) 9 10
    ASSIGN (280) 10
    NOT (281)
    LE (282)
    ERROR (283)


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    program <program> (38)
        on left: 1
        on right: 0
    class_list <classes> (39)
        on left: 2 3
        on right: 1 3
    class <class_> (40)
        on left: 4 5
        on right: 2 3
    feature_list <features> (41)
        on left: 6 7
        on right: 4 5 7
    feature <feature> (42)
        on left: 8
        on right: 6 7
    attribute <feature> (43)
        on left: 9 10
        on right: 8


State 0

    0 $accept: • program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


State 1

    4 class: CLASS • TYPEID '{' feature_list '}' ';'
    5      | CLASS • TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 5


State 2

    0 $accept: program • $end

    $end  shift, and go to state 6


State 3

    1 program: class_list •
    3 class_list: class_list • class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


State 4

    2 class_list: class •

    $default  reduce using rule 2 (class_list)


State 5

    4 class: CLASS TYPEID • '{' feature_list '}' ';'
    5      | CLASS TYPEID • INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 8
    '{'       shift, and go to state 9


State 6

    0 $accept: program $end •

    $default  accept


State 7

    3 class_list: class_list class •

    $default  reduce using rule 3 (class_list)


State 8

    5 class: CLASS TYPEID INHERITS • TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 10


State 9

    4 class: CLASS TYPEID '{' • feature_list '}' ';'

    OBJECTID  shift, and go to state 11

    feature_list  go to state 12
    feature       go to state 13
    attribute     go to state 14


State 10

    5 class: CLASS TYPEID INHERITS TYPEID • '{' feature_list '}' ';'

    '{'  shift, and go to state 15


State 11

    9 attribute: OBJECTID • ':' TYPEID ';'
   10          | OBJECTID • ':' TYPEID ASSIGN ';'

    ':'  shift, and go to state 16


State 12

    4 class: CLASS TYPEID '{' feature_list • '}' ';'
    7 feature_list: feature_list • feature

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 17

    feature    go to state 18
    attribute  go to state 14


State 13

    6 feature_list: feature •

    $default  reduce using rule 6 (feature_list)


State 14

    8 feature: attribute •

    $default  reduce using rule 8 (feature)


State 15

    5 class: CLASS TYPEID INHERITS TYPEID '{' • feature_list '}' ';'

    OBJECTID  shift, and go to state 11

    feature_list  go to state 19
    feature       go to state 13
    attribute     go to state 14


State 16

    9 attribute: OBJECTID ':' • TYPEID ';'
   10          | OBJECTID ':' • TYPEID ASSIGN ';'

    TYPEID  shift, and go to state 20


State 17

    4 class: CLASS TYPEID '{' feature_list '}' • ';'

    ';'  shift, and go to state 21


State 18

    7 feature_list: feature_list feature •

    $default  reduce using rule 7 (feature_list)


State 19

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list • '}' ';'
    7 feature_list: feature_list • feature

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 22

    feature    go to state 18
    attribute  go to state 14


State 20

    9 attribute: OBJECTID ':' TYPEID • ';'
   10          | OBJECTID ':' TYPEID • ASSIGN ';'

    ASSIGN  shift, and go to state 23
    ';'     shift, and go to state 24


State 21

    4 class: CLASS TYPEID '{' feature_list '}' ';' •

    $default  reduce using rule 4 (class)


State 22

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' • ';'

    ';'  shift, and go to state 25


State 23

   10 attribute: OBJECTID ':' TYPEID ASSIGN • ';'

    ';'  shift, and go to state 26


State 24

    9 attribute: OBJECTID ':' TYPEID ';' •

    $default  reduce using rule 9 (attribute)


State 25

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' •

    $default  reduce using rule 5 (class)


State 26

   10 attribute: OBJECTID ':' TYPEID ASSIGN ';' •

    $default  reduce using rule 10 (attribute)
